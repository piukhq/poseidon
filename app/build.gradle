plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'androidx.navigation.safeargs'
    id 'kotlin-kapt'
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'

}
apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'kotlin-kapt'

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.bink.localhero"
        minSdk 23
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            //signingConfig signingConfigs.debug
            minifyEnabled true
            shrinkResources true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            android.applicationVariants.all { variant ->
                variant.outputs.all {
                    outputFileName = "Bink_${android.defaultConfig.versionName}_${variant.buildType.name}.apk"
                }
            }
        }

        debug {
            applicationIdSuffix ".debug"
            debuggable true
            android.applicationVariants.all { variant ->
                variant.outputs.all {
                    outputFileName = "Bink_${android.defaultConfig.versionName}_${variant.buildType.name}.apk"
                }
            }
        }

        beta {
            debuggable true
            applicationIdSuffix ".beta"
//      Add appropriate signing config
//      signingConfig signingConfigs.binkSigningConfig
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            android.applicationVariants.all { variant ->
                variant.outputs.all {
                    outputFileName = "Bink_${android.defaultConfig.versionName}_${variant.buildType.name}.apk"
                }
            }
            ext.betaDistributionGroupAliases = "internal-testing"
            ext.betaDistributionNotifications = true
        }

    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }

    buildFeatures {
        viewBinding true
    }
}

dependencies {
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    def nav_version = "2.4.1"
    def retrofit_version = "2.9.0"
    def moshi_version = "1.12.0"
    def koin_version = "3.1.5"
    def lifecycle_version = "2.4.1"
    def coroutines_version = "1.6.0"
    def room_version = "2.4.2"


    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    //Firebase
    implementation platform('com.google.firebase:firebase-bom:29.1.0')

    //Security
    implementation "androidx.security:security-crypto:1.1.0-alpha01"

    //Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    //ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"

    //Kotlin coroutines
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version")

    //Splash api
    implementation 'androidx.core:core-splashscreen:1.0.0-beta01'

    //Barcode scanner
    implementation('com.journeyapps:zxing-android-embedded:4.3.0') { transitive = false }
    implementation 'com.google.zxing:core:3.3.0'

    // retrofit & moshi
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation("com.squareup.okhttp3:logging-interceptor:3.14.2")
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_version"
    implementation("com.squareup.moshi:moshi-kotlin:$moshi_version")
    kapt("com.squareup.moshi:moshi-kotlin-codegen:1.13.0")


    //Koin
    implementation "io.insert-koin:koin-android:$koin_version"

    //Room
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"

    //Maps
    implementation 'com.google.android.gms:play-services-maps:18.0.2'

    //Gson
    implementation 'com.google.code.gson:gson:2.8.9'

}